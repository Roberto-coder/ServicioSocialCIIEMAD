---
import Layout from "../../layouts/BaseLayout.astro";
import { personas } from "../../content/personas.js";
import { publicaciones } from "../../content/publicaciones.js";
import { ArrowLeft, Mail, GraduationCap, Users, Target, Linkedin, ExternalLink } from "lucide-astro";

export async function getStaticPaths() {
  return personas.map((persona) => ({
    params: { id: persona.id },
  }));
}
const { id } = Astro.params;
const persona = personas.find((p) => p.id === id);
const publicacionesPersona = persona && persona.publicaciones
  ? publicaciones.filter((pub) => pub.autores.includes(persona.publicaciones[0]))
  : [];

---
<Layout>
  {persona ? (
    <div class="max-w-4xl mx-auto px-4 pt-8">
      <a href="/sobre-nosotros" class="inline-flex items-center text-verde hover:text-guinda transition-colors mb-8">
        <ArrowLeft class="w-4 h-4 mr-2" />
        Volver al equipo
      </a>
    </div>
    <section class="max-w-4xl mx-auto px-4 pb-16">
      <div class="grid md:grid-cols-3 gap-8 mb-12">
        <div class="md:col-span-1">
          <div class="aspect-square rounded-xl overflow-hidden shadow-lg">
            <img src={persona.foto} alt={persona.nombre} class="w-full h-full object-cover" />
          </div>
        </div>
        <div class="md:col-span-2">
          <h1 class="text-4xl font-serif text-guinda mb-2">{persona.nombre}</h1>
          <p class="text-xl text-verde font-medium mb-4">{persona.titulo}</p>
          <div class="flex items-center mb-6">
            <Mail class="w-5 h-5 text-gray-500 mr-2" />
            <a href={`mailto:${persona.email}`} class="text-guinda hover:underline">{persona.email}</a>
          </div>
          <div class="mb-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-3 flex items-center">
              <GraduationCap class="w-5 h-5 mr-2" />
              Líneas de Investigación
            </h3>
            <div class="flex flex-wrap gap-2">
              {persona.especialidades.map((esp) => (
                <span class="bg-verde/10 text-verde px-3 py-1 rounded-full text-sm font-medium">{esp}</span>
              ))}
            </div>
          </div>
        </div>
      </div>

      <div class="bg-gray-50 p-6 rounded-lg">
          <h3
            class="text-lg font-semibold text-gray-800 mb-3 flex items-center"
          >
            <Users class="w-5 h-5 mr-2" />
            Semblanza Profesional
          </h3>
          <p class="text-gray-700 leading-relaxed">
            {persona.semblanza}
          </p>
        </div>

        
        <!-- Enlaces académicos -->
        <div class="mt-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-3">Enlaces Académicos</h3>
            <div class="flex flex-wrap gap-4">
            {persona.enlaces?.map((enlace) => (
            <a
                href={enlace.url}
                class={`inline-flex items-center text-${enlace.color} hover:text-${enlace.color.replace('600','800')} transition-colors`}
                target="_blank"
                rel="noopener noreferrer"
            >
                <ExternalLink class="w-4 h-4 mr-2" />
                {enlace.tipo}
            </a>
            ))}
        </div>
    </div>
<br>
    <div class="bg-white border border-gray-200 rounded-xl p-8">
            <h3 class="text-2xl font-serif text-guinda mb-6 flex items-center">
                <Target class="w-6 h-6 mr-3" />
                Mis Publicaciones
            </h3>

            <!-- Tabs -->
            <div class="mb-4">
              <div id="project-tabs" class="flex flex-wrap gap-2">
                <button data-tipo="" class="px-3 py-1 rounded-md bg-guinda/10 text-guinda font-semibold">Todos</button>
                <button data-tipo="ARTÍCULO" class="px-3 py-1 rounded-md bg-gray-100 hover:bg-gray-200">ARTÍCULO</button>
                <button data-tipo="PAPER" class="px-3 py-1 rounded-md bg-gray-100 hover:bg-gray-200">PAPER</button>
                <button data-tipo="TESIS" class="px-3 py-1 rounded-md bg-gray-100 hover:bg-gray-200">TESIS</button>
                <button data-tipo="CAPITULO DE LIBRO" class="px-3 py-1 rounded-md bg-gray-100 hover:bg-gray-200">CAPÍTULO DE LIBRO</button>
                <button data-tipo="REVISTA" class="px-3 py-1 rounded-md bg-gray-100 hover:bg-gray-200">REVISTA</button>
              </div>
            </div>

            <!-- Grid de proyectos (usamos publicaciones como 'proyectos' filtrables) -->
            <div id="proyectos-grid" class="grid md:grid-cols-2 gap-6">
              {publicacionesPersona.map((pub) => (
                <div class="border-l-4 border-verde pl-4 proyecto-item" data-tipo={pub.tipo}>
                  <h4 class="font-semibold text-gray-800 mb-2">{pub.titulo}</h4>
                  <p class="text-gray-600 text-sm mb-2">{pub.autores}</p>
                  <span class="inline-block text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded">{pub.tipo} • {pub.anio}</span>
                </div>
              ))}
            </div>
          </div>

          <script>
        // Comportamiento seguro de pestañas (se ejecuta en el navegador)
        (function () {
          try {
            /** @type {HTMLElement | null} */
            const tabsContainer = document.getElementById('project-tabs');
            const rawItems = Array.from(document.querySelectorAll('.proyecto-item'));
            /** @type {HTMLElement[]} */
            const items = rawItems.map((el) => /** @type {HTMLElement} */ (el)).filter(Boolean);
            if (!(tabsContainer instanceof HTMLElement)) return;
            const container = tabsContainer;

            /**
             * @param {HTMLElement} button
             */
            tabsContainer.addEventListener('click', /** @param {Event} e */ (e) => {
              const target = /** @type {HTMLElement | null} */ (e.target);
              if (!(target instanceof HTMLElement)) return;
              const tipo = target.getAttribute('data-tipo');
              if (tipo == null) return;

              // Activar el botón clickeado
              const btns = /** @type {NodeListOf<HTMLButtonElement>} */ (container.querySelectorAll('button'));
              btns.forEach((b) => b.classList.remove('bg-guinda/10', 'text-guinda'));
              target.classList.add('bg-guinda/10', 'text-guinda');

              items.forEach((el) => {
                const elHtml = /** @type {HTMLElement | null} */ (el instanceof HTMLElement ? el : null);
                if (!(elHtml instanceof HTMLElement)) return;
                const itemTipo = elHtml.getAttribute('data-tipo') || '';
                elHtml.style.display = tipo === '' || itemTipo === tipo ? '' : 'none';
              });
            });
          } catch (err) {
            // no bloquear la página si hay un error
            console.error(err);
          }
        })();
      </script>

      
    </section>
  ) : (
    <div class="max-w-2xl mx-auto py-20 text-center">
      <h1 class="text-3xl font-serif text-guinda mb-4">Perfil no encontrado</h1>
      <p class="text-gray-600">La persona solicitada no existe en el registro.</p>
      <a href="/sobre-nosotros" class="inline-block mt-8 bg-verde text-white px-6 py-2 rounded-lg font-semibold shadow hover:bg-guinda transition-colors duration-200">Volver al equipo</a>
    </div>
  )}
</Layout>
